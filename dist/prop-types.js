import e from 'prop-types';
const n = e.shape({ current: e.element }),
  o = e.shape({ classes: e.object, innerRef: n });
export const propTypes = {
  actions: e.arrayOf(
    e.oneOfType([
      e.func,
      e.shape({
        icon: e.oneOfType([e.element, e.func, e.string, n]).isRequired,
        isFreeAction: e.bool,
        position: e.oneOf(['auto', 'toolbar', 'toolbarOnSelect', 'row']),
        tooltip: e.string,
        onClick: e.func.isRequired,
        onMouseEnter: e.func,
        onMouseLeave: e.func,
        iconProps: e.object,
        disabled: e.bool,
        hidden: e.bool
      }),
      e.shape({
        action: e.func,
        position: e.oneOf(['auto', 'toolbar', 'toolbarOnSelect', 'row'])
      })
    ])
  ),
  renderSummaryRow: e.func,
  columns: e.arrayOf(
    e.shape({
      cellStyle: e.oneOfType([e.object, e.func]),
      currencySetting: e.shape({
        locale: e.string,
        currencyCode: e.string,
        minimumFractionDigits: e.number,
        maximumFractionDigits: e.number
      }),
      customFilterAndSearch: e.func,
      customSort: e.func,
      customExport: e.func,
      defaultFilter: e.any,
      defaultSort: e.oneOf(['asc', 'desc']),
      editComponent: e.oneOfType([e.element, e.func]),
      emptyValue: e.oneOfType([e.string, e.node, e.func]),
      export: e.bool,
      field: e.string,
      filtering: e.bool,
      filterCellStyle: e.object,
      filterPlaceholder: e.string,
      filterComponent: e.oneOfType([e.element, e.func]),
      grouping: e.bool,
      headerStyle: e.object,
      hidden: e.bool,
      hideFilterIcon: e.bool,
      initialEditValue: e.any,
      lookup: e.object,
      editable: e.oneOfType([
        e.func,
        e.oneOf(['always', 'onUpdate', 'onAdd', 'never'])
      ]),
      removable: e.bool,
      render: e.func,
      searchable: e.bool,
      sorting: e.bool,
      title: e.oneOfType([e.element, e.string]),
      type: e.oneOf([
        'string',
        'boolean',
        'numeric',
        'date',
        'datetime',
        'time',
        'currency'
      ])
    })
  ).isRequired,
  components: e.shape({
    Action: e.oneOfType([e.element, e.func, o]),
    Actions: e.oneOfType([e.element, e.func, o]),
    Body: e.oneOfType([e.element, e.func, o]),
    Cell: e.oneOfType([e.element, e.func, o]),
    Container: e.oneOfType([e.element, e.func, o]),
    EditField: e.oneOfType([e.element, e.func, o]),
    EditRow: e.oneOfType([e.element, e.func, o]),
    FilterRow: e.oneOfType([e.element, e.func, o]),
    Groupbar: e.oneOfType([e.element, e.func, o]),
    GroupRow: e.oneOfType([e.element, e.func, o]),
    Header: e.oneOfType([e.element, e.func, o]),
    OverlayLoading: e.oneOfType([e.element, e.func, o]),
    OverlayError: e.oneOfType([e.element, e.func, o]),
    Pagination: e.oneOfType([e.element, e.func, o]),
    Row: e.oneOfType([e.element, e.func, o]),
    Toolbar: e.oneOfType([e.element, e.func, o])
  }),
  data: e.oneOfType([e.arrayOf(e.object), e.func]).isRequired,
  editable: e.shape({
    isEditable: e.func,
    isDeletable: e.func,
    onRowAdd: e.func,
    onRowUpdate: e.func,
    onRowDelete: e.func,
    onRowAddCancelled: e.func,
    onRowUpdateCancelled: e.func,
    isEditHidden: e.func,
    isDeleteHidden: e.func
  }),
  detailPanel: e.oneOfType([
    e.func,
    e.arrayOf(
      e.oneOfType([
        e.func,
        e.shape({
          disabled: e.bool,
          icon: e.oneOfType([e.element, e.func, e.string, n]),
          openIcon: e.oneOfType([e.element, e.func, e.string, n]),
          tooltip: e.string,
          render: e.func.isRequired
        })
      ])
    )
  ]),
  icons: e.shape({
    Add: e.oneOfType([e.element, e.func, n]),
    Check: e.oneOfType([e.element, e.func, n]),
    Clear: e.oneOfType([e.element, e.func, n]),
    Delete: e.oneOfType([e.element, e.func, n]),
    DetailPanel: e.oneOfType([e.element, e.func, n]),
    Edit: e.oneOfType([e.element, e.func, n]),
    Export: e.oneOfType([e.element, e.func, n]),
    Filter: e.oneOfType([e.element, e.func, n]),
    FirstPage: e.oneOfType([e.element, e.func, n]),
    LastPage: e.oneOfType([e.element, e.func, n]),
    NextPage: e.oneOfType([e.element, e.func, n]),
    PreviousPage: e.oneOfType([e.element, e.func, n]),
    Refresh: e.oneOfType([e.element, e.func, n]),
    ResetSearch: e.oneOfType([e.element, e.func, n]),
    Search: e.oneOfType([e.element, e.func, n]),
    SortArrow: e.oneOfType([e.element, e.func, n]),
    ThirdStateCheck: e.oneOfType([e.element, e.func, n]),
    ViewColumn: e.oneOfType([e.element, e.func, n])
  }),
  isLoading: e.bool,
  title: e.oneOfType([e.element, e.string]),
  options: e.shape({
    actionsCellStyle: e.object,
    editCellStyle: e.object,
    detailPanelColumnStyle: e.object,
    actionsColumnIndex: e.number,
    addRowPosition: e.oneOf(['first', 'last']),
    columnsButton: e.bool,
    defaultExpanded: e.oneOfType([e.bool, e.func]),
    debounceInterval: e.number,
    detailPanelType: e.oneOf(['single', 'multiple']),
    doubleHorizontalScroll: e.bool,
    emptyRowsWhenPaging: e.bool,
    exportAllData: e.bool,
    exportMenu: e.arrayOf(e.shape({ label: e.string, exportFunc: e.func })),
    filtering: e.bool,
    filterCellStyle: e.object,
    filterRowStyle: e.object,
    header: e.bool,
    headerSelectionProps: e.object,
    headerStyle: e.object,
    hideFilterIcons: e.bool,
    initialPage: e.number,
    maxBodyHeight: e.oneOfType([e.number, e.string]),
    minBodyHeight: e.oneOfType([e.number, e.string]),
    loadingType: e.oneOf(['overlay', 'linear']),
    overflowY: e.oneOf([
      'visible',
      'hidden',
      'scroll',
      'auto',
      'initial',
      'inherit'
    ]),
    padding: e.oneOf(['default', 'dense']),
    paging: e.bool,
    pageSize: e.number,
    pageSizeOptions: e.arrayOf(e.number),
    paginationType: e.oneOf(['normal', 'stepped']),
    paginationPosition: e.oneOf(['bottom', 'top', 'both']),
    rowStyle: e.oneOfType([e.object, e.func]),
    search: e.bool,
    searchText: e.string,
    toolbarButtonAlignment: e.oneOf(['left', 'right']),
    searchFieldAlignment: e.oneOf(['left', 'right']),
    searchFieldStyle: e.object,
    searchAutoFocus: e.bool,
    searchFieldVariant: e.oneOf(['standard', 'filled', 'outlined']),
    selection: e.bool,
    selectionProps: e.oneOfType([e.object, e.func]),
    showEmptyDataSourceMessage: e.bool,
    showFirstLastPageButtons: e.bool,
    showSelectAllCheckbox: e.bool,
    showTitle: e.bool,
    showTextRowsSelected: e.bool,
    sorting: e.bool,
    keepSortDirectionOnColumnSwitch: e.bool,
    toolbar: e.bool,
    thirdSortClick: e.bool
  }),
  localization: e.shape({
    grouping: e.shape({ groupedBy: e.string, placeholder: e.string }),
    pagination: e.object,
    toolbar: e.object,
    header: e.object,
    body: e.object
  }),
  initialFormData: e.object,
  onSearchChange: e.func,
  onFilterChange: e.func,
  onColumnDragged: e.func,
  onGroupRemoved: e.func,
  onSelectionChange: e.func,
  onRowsPerPageChange: e.func,
  onPageChange: e.func,
  onChangeColumnHidden: e.func,
  onOrderChange: e.func,
  onRowClick: e.func,
  onDoubleRowClick: e.func,
  onTreeExpandChange: e.func,
  onQueryChange: e.func,
  onBulkEditOpen: e.func,
  tableRef: e.any,
  style: e.object,
  page: e.number,
  totalCount: e.number
};
